package main

import (
	"strings"
	"testing"
)

const (
	helloworld = `++++++++[>++++[>++>+++>+++>+<<<<-]>+>+>->>+[<]<-]>>.>---.+++++++..+++.>>.<-.<.+++.------.--------.>>+.>++.`
	WorldLine  = `++++++++++[>+>+++>+++++++>++++++++++<<<<-]>>>>-------------.++++++++++++++++++++++++.+++.------.--------.<++++++.>+++++.+++++.---------.<<++.>---.>+++++++++.-------.--.+++++++++.-----.------.++++++++++++.`
	largeone   = `++++++++++[>+>+++>+++++++>++++++++++<<<<-]>>>++++++++++++++.>++++.---.<<++.>-------------.>++++++++++.<<.>>+.++.---.--------.+++++++++++.-----------------.++++++++++++..----.+++++.-------.<<.>>+++++.-----------.+++++++++++++.-------.++++++++++++++.--------------------.++++++.--.<<.>>++++.++++++++++.<<.>>------------------.+++++++++++++.<<.>>+.+.-----------.+++++++++.<<.>>+++++.----.++++++.---.---------------.++.<<.>>+++++++++++.++.---.-----.-----.--.+++++++++++++++++.<<.>>.-----.<<.>>--.------------.++++++++++.------.<<.>>+++++++++++.++.---.--------.+++++++++++.-----------------.++++++++++++..--------.+++++++++++++.+.<<.>>------.++.+++.-------------.<<.>>+++++++++++.++.---.-----------.+++++++++++++++++.------------------.+++++++++++++++++.-----------.+++++++++++++.-----------------.<<++++++++++++++.<..>>.>++++++++++.<<--------------.>>------.++++++++++.<<.>>--------------.+++++++++++++++++++.--------.++.-------------.++++++++++++++..----------.+++++++++++++.-----------------.<<++++++++++++.------------.>>--.++++++++++++.-.-----------.++++++.++++++++++.--------------.<<++++++++++++.------------.>>--.+++++++++.-------.----.+++++++++++++.<<++++++++++++.------------.>>-------------.+++++++++++++.----------.<<.>>+.+..+++.------.++++++.----.+++++++++.++++++.<<++++++++++++++.--------------.>++.>.-.<<.>>----------------.++++++++++++.-.-----------.++++++++++++++++++.---..-------------.+++++++++.-----------.++++++++++++++++++++++.<<.>>------------.--------.--.+++++.-------.+++++++++++++.-----.++++++++++.------.++++++.<<.>>------.------------.++++++++++.------.<<.>>++++.+++++++++++.<<.>>---------------.----.++++++++++++++++++.++++++.<<.>>-----.-----.<<.>>++++++++.-----.---------.+++++++++++.---------------.<<.>>+++++++++++.++.---.--------.+++++++++++.-----------------.++++++++++++.++++++.<<.>>+.------------.-------.+++++++++++++++++++.<<.>>-------------.--.+++++++++++++++.<<.>>.------------.---.<<.>>++++++++.++.++++.+.<<.>>-----.++++++.-.<<.>>-----.---------.<<.>>+++++++.++++++++.---------.++++++++.-----------.------.++++++++++++.+++.-------------.<<.>>----.+++++++++++++.----------.<<.>>++++++++++.---------.+++++++++++++++.+++.--------.+++.-------.------.-.<<.>>+++++++++.------------.++.+++++.+.+++++.---------.++++++++++++++.<<++++++++++++.------------.>>++++.---------------.+.+++.-------.<<.>>++++.+++++++++++.-.<<.>>-----.+.+++++++.-----------------.+++++++.<<.>>++++++++.+++++.---------.-----------.<<.>>++++++++++++++.++++++.------.+.---------------.++++++++.<<.>>--------.+++++++++.-------------.+.++++++++++.-------.++++++++++++++.<<.>>-------------.++++++.-------.+++++++++++++++++++.---------------.-------.++++++++++.-------.<<.>>----.+++++++++++++.----------.<<.>>+++++++++.++.-----------.+++++++++++++++++.---------.-----------.+++++++++++++++++.<<.>>--.++.---.--------.+++++++++++.-----------------.++++++++++++.<<.>>----------.++++++++++++.-.+++++.+.--.+++.------------------.+++++++++++++++++.-----------.++++++.-.<<++++++++++++++.--------------.>--.>+.<<.>>------------.++++++++++++.--.+++.-------.+++.-------.++++++++++++++.<<.>>--.++++.------------.------.++++++++.+.+++++++++++++.<<.>>-----.-----.<<.>>--.------------.++.+++++.+.+++++.---------.<<.>>--.++++++++++++.-----------.+.<<.>>++++++++++++++++++++.--------------------.+++++++++++++++.<<.>>------------.-------.++++++++++++++++++.<<.>>+.------------.---.<<.>>--.++++++++++++.-.++++++++.-----------------.+++++++++.-----.----.+++++++++.-----------.++.<<.>>++++++++++.---------.<<.>>+.------.+++++++++++++++++.----------------.-.++++++.--.<<.>>--.++++++++++++.---..-------.--.+++++++++++++++++.-----------.++++++.-.<<.>>-------------.+++++++++++++.----------.<<.>>++++++++++++++++.------------.---.<<.>>+++++++++++.-.++++++++.------------------.+++++++++++++.<<.>>---.---------.<<.>>++++++++++++.+++.-------.<<+++++++++++++.>>++++++.-----------.++++.--------.<<-------------.>>+++++++++++++.-------------.+.++++++.-------.--.+++++++++++++++++.-----------.++++++.-.<<++++++++++++++.--------------.>++.>++++++.<<+++++++.>>-.<<-------.>>------------------.<<.>>+++++.-----.++++++++++++++++++.+.<<++++++++++++.------------.>>-.+.-------------------.+++++++++++++++++++.-----------.------.--.+++++++++++..+++++++++++++.<<.>>-----.+++++.---------.-----------.-.<<++++++++++++.------------.>>-.++++++++++++.--.+++.-------.+++.-------.-.<<.>>++++++++.-----------.+++++++++++++.-------.++++++++++++++.--------------------.++++++.--.<<.>>+++++++++++++++.------------.-------.+++++++++++++++++++.<<.>>--------------.-..+++++++.+++++++.<<.>>-------.---.++.------.<<.>>----.<<.>>+++.+++++++++++++++++++++.-----------.-------------.++++++++++++.----.------.--.+++++++++++..+++++++++++++.<<.>>-----.+++++.---------.-----------.-.<<++++++++++++.------------.>>+++++.+++++.++++++.---------------.+++++++++++++.--.++.-------------.+++++++++++++++.---------------.-.<<.>>++++++++.-----------.+++++++++++++.-------.++++++++++++++.--------------------.++++++.--.<<++++++++++++++.<..`
)

func Test_PositiveBF(t *testing.T) {
	got := Interpret(strings.NewReader(helloworld))
	want := "Hello World!\n"
	if got != want {
		t.Errorf("got %q, wanted %q ", got, want)
	}
	got = Interpret(strings.NewReader(WorldLine))
	want = "WorldLine Ingenico"
	if got != want {
		t.Errorf("got %q, wanted %q", got, want)
	}
}
func Test_largeBF(t *testing.T) {
	got := Interpret(strings.NewReader(largeone))
	want := `The Go programming language is an open source project to make programmers more productive.

Go is expressive, concise, clean, and efficient. Its concurrency mechanisms make it easy to write programs that get the most out of multicore and networked machines, while its novel type system enables flexible and modular program construction. Go compiles quickly to machine code yet has the convenience of garbage collection and the power of run-time reflection. It's a fast, statically typed, compiled language that feels like a dynamically typed, Interpreted language.`
	if !strings.Contains(got, want) {
		t.Errorf("got %q, wanted %q ", got, want)
	}
}
